#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<string.h>	
int main() {
	//操作符篇
	/*
	1.
	算术操作符:+,-,*,/,%
	整数除法时，其结果也会保留整数
	取余操作符的运算对象均为整数(整数之间才有取余)---输出格式不影响
	2.
	移位操作符:>>,<<	将其二进制向左或向右移位
	向左移1位：扩大r^(位数)倍:2―>(000...)10―>(000...)100=4
	向右移1位: 缩小为原来的1/r^(位数):2―>(000...)10―>(000...)1=1

	!!向右移2位则扩大或者缩小r*r倍,3,4,5倍...则r^3,r^4,r^5...依次类推（位权）!!

	缩小同理
	r:进制基数，二进制则r=2
	3.
	位操作符:&,|,^（二进制位）
	&按位与
	|按位或
	^按位异或
	4.
	赋值操作符
	=,+=,-=,*=,/=,|=,&=,|=,>>=,<<=
	单等号为直接赋值,复合赋值：a+=2――>a=a+2(其他同理)
	5.
	单目操作符(操作数为1)
	!(逻辑取反，逻辑:0为假(符号0)，非0为真(符号1))
	前置++、--,后置++、--:自增1或自减1
	前置：先自增(减)再参与运算
	后置：先参与运算再自增(减)
	+(正),-(负),sizeof(求类型或变量的所占空间,单位字节,非函数),~按位(二进制)取反
	tips:sizeof非函数,操作对象是可以不用(),但如果操作对象是数据类型时必须引用()
	sizeof(int),sizeof a
	(类型),强制类型转换
	*，&
	双目操作符(操作数为2)

	
	*/
	float a,b,c;
	a = 3 / 2;
	b = 3.0 / 2;
	printf("整数除法a=%f,非整数除法b=%f\n",a,b);
	c = 3 % 2;
	printf("取余c=%f\n",c);	
	int d=2;
	d <<= 8;
	printf("我是自变赋值d:%d\n",d);
	int arr[10] = { 0 };
	int m = sizeof(arr) / sizeof(int);//通过sizeofqiu数组元素个数
	printf("arr的数组大小是%d",m);
	return 0;
}