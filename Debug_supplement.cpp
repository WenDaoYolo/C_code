#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>

/*
		
		Release版本下编译器的自动优化
	

*/



int main() {									//栈区的使用习惯:先使用高地址再使用低地址
												//而数组的地址是由着下标的增加,其地址由低到高
	int i = 0;									//所以i先定义,其地址高于arr数组的地址,而arr越界则可能访问到i
	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };		//若定义在之后,数组访问不到i,会越界报错
	/*
	
	for (i = 0; i <= 12; i++) {
		arr[i] = 0;								//将i改为0，陷入死循环,无法进行越界报错
		printf("hehe\n");

		以上是debug版本下运行的结果
	
	}

	*/
	printf("%p\n",&i);
	printf("%p\n",arr);
	/*
	
	release版本下系统会自动进行优化
	在两个版本下分别打印其地址可以发现:debug下,i的地址确实是高于arr数组的地址
									  :而在release版本下发现系统自动进行了优化,其i的地址低于arr的地址,这样arr就不会越界访问到i从而造成死循环
	
	*/

	/*
		各个编译器其栈区局部变量之间的间隔(地址,其实际间隔大小取决于局部变量类型,暂不关心)
		vc6.0相邻无间隔	即0个地址
		GCC				  1个地址
		msvc			  2个地址
		其他			  未知

	*/
	
	//所以release版本会对代码进行优化,所以可能会发生release版本下运行的结果和程序员在debug版本下运行的结果不同的情况		未来的工作中要注意

	return 0;
}