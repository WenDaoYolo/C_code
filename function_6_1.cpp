#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#pragma comment(lib,"Test.lib")				//将静态库文件导入到源文件
#include "Test.h"							//通过头文件来声明函数(或者叫：连接到这个函数库)		说法不唯一，灵活学习
/*	
	静态库的意义:
	将编写的源文件转换成了二进制形成的一种静态库，隐藏了代码，但仍然可以使用静态库中
	编写的函数,用于代码的非开源或者功能出售(只出售其功能，不向他人展示代码实现过程)


	静态库的生成:
	源文件编译运行后都会在项目目录下产生一个文件             
	更改项目工程的配置类型,会产生不同的文件并且有不同的作用
	exe文件   最常见的可执行文件
	lib		  静态库文件		在debug版本下可以正常运行，release版本下不能运行，但但都可以生成能正常使用的文件
	...		  ...


	静态库的使用:
	将获得的静态库和对应的头文件拷贝到工程目录下
	头文件添加到工程之中,预处理命令导入静态库,#pragma comment(lib,"静态库名.lib")
	然后用头文件去引用这个函数库


	头文件和静态库:
	由于静态库无法查看,所以一定要和头文件绑在一起,
	通过头文件可以查看了哪些函数,这些函数的用法和格式(注释,相当于说明和使用文档)
	并且函数只有在定义或者声明后才能调用，所以想要使用静态库只能通过引头文件声明的方式来使用
	
	
*/
int main() {
	int a = 10, b = 20;
	int value=Sub(a,b);
	printf("%d",value);

}
